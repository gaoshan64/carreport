# Generated by Django 4.0.3 on 2022-03-26 13:30

import ajaximage.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarAbout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_record_o', models.DateTimeField(auto_created=True, auto_now=True)),
                ('car_brand_model', models.CharField(max_length=30, verbose_name='品牌型号')),
                ('if_import', models.CharField(choices=[('import', '进口'), ('n_import', '国产')], max_length=10, verbose_name='是否进口')),
                ('car_license_tag_number', models.CharField(db_index=True, max_length=20, verbose_name='车辆牌照')),
                ('car_id', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='车架号')),
                ('car_type', models.CharField(max_length=10, verbose_name='车型')),
                ('car_color', models.CharField(max_length=10, verbose_name='颜色')),
                ('licence_first', models.DateField(verbose_name='初次登记日期')),
                ('licence_issued', models.DateField(verbose_name='上牌日期')),
                ('engine_number', models.CharField(max_length=20, verbose_name='发动机号')),
                ('engine_cc', models.CharField(max_length=10, verbose_name='排量')),
                ('engine_power', models.CharField(max_length=10, verbose_name='马力')),
                ('engine_power_mode', models.CharField(max_length=10, verbose_name='动力方式')),
                ('fuel_type', models.CharField(choices=[('d', '柴油'), ('g', '汽油'), ('na', 'NA')], max_length=10, verbose_name='燃料类别')),
                ('drive_mode', models.CharField(max_length=10, verbose_name='驱动方式')),
                ('gear_box', models.CharField(choices=[('m', '手动'), ('a', '自动')], max_length=10, verbose_name='变速箱')),
                ('manage_city', models.CharField(max_length=10, verbose_name='车辆管理属地')),
                ('if_business', models.CharField(choices=[('b', '营运'), ('nb', '非营运')], max_length=10, verbose_name='车辆使用性质')),
                ('check_state', models.CharField(choices=[('wait', '待检测'), ('p_on', '检测中'), ('d_on', '复检中'), ('finish', '已完成')], default='wait', max_length=10, verbose_name='车辆检测状态')),
            ],
            options={
                'ordering': ('-first_record_o',),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_record', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('c_name', models.CharField(db_index=True, max_length=20, verbose_name='姓名')),
                ('c_tel', models.CharField(db_index=True, max_length=15, verbose_name='电话')),
                ('c_wechat', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='身份证')),
                ('memo', models.TextField(blank=True, max_length=1000, verbose_name='备注')),
            ],
            options={
                'ordering': ('-first_record',),
            },
        ),
        migrations.CreateModel(
            name='ReportsContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('car_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_report', to='report_OA.carabout', verbose_name='车辆信息')),
            ],
            options={
                'ordering': ('-create_date',),
            },
        ),
        migrations.CreateModel(
            name='ReportsContent2',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('accident_car', models.BooleanField(default=0, verbose_name='事故车')),
                ('water_car', models.BooleanField(default=0, verbose_name='水泡车')),
                ('fire_car', models.BooleanField(default=0, verbose_name='火烧车')),
                ('car_level', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H')], default='A', max_length=10, verbose_name='车辆等级')),
                ('car_body_score', models.IntegerField(default=0, verbose_name='车身检查')),
                ('car_chassis_score', models.IntegerField(default=0, verbose_name='底盘检查')),
                ('car_power_score', models.IntegerField(default=0, verbose_name='动力检查')),
                ('car_com_score', models.IntegerField(default=0, verbose_name='综合检查')),
                ('car_score', models.IntegerField(default=0, verbose_name='车况得分')),
                ('car_u_c_describe', models.TextField(default='', max_length=1000, verbose_name='异常状况描述')),
                ('car_b_image_zq', ajaximage.fields.AjaxImageField(blank=True, verbose_name='左前45')),
                ('car_b_image_yh', ajaximage.fields.AjaxImageField(blank=True, verbose_name='右后45')),
                ('car_b_image_zqzy', ajaximage.fields.AjaxImageField(blank=True, verbose_name='左前座椅')),
                ('car_b_image_yhzy', ajaximage.fields.AjaxImageField(blank=True, verbose_name='右后座椅')),
                ('car_b_engcab', ajaximage.fields.AjaxImageField(blank=True, verbose_name='发动机仓')),
                ('car_b_rcab', ajaximage.fields.AjaxImageField(blank=True, verbose_name='后备箱')),
                ('car_b_dashboard', ajaximage.fields.AjaxImageField(blank=True, verbose_name='仪表盘')),
                ('car_b_ccontrol', ajaximage.fields.AjaxImageField(blank=True, verbose_name='中控台')),
                ('car_b_np', ajaximage.fields.AjaxImageField(blank=True, verbose_name='车辆名牌')),
                ('car_b_dm', ajaximage.fields.AjaxImageField(blank=True, verbose_name='车辆代码')),
                ('report_m', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report2', to='report_OA.reportscontent')),
                ('second_checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_check_report', to=settings.AUTH_USER_MODEL, verbose_name='复检人')),
            ],
        ),
        migrations.CreateModel(
            name='ReportsContent1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_cover_1', models.IntegerField(default=0, verbose_name='左上')),
                ('engine_cover_2', models.IntegerField(default=0, verbose_name='左下')),
                ('engine_cover_3', models.IntegerField(default=0, verbose_name='中')),
                ('engine_cover_4', models.IntegerField(default=0, verbose_name='右上')),
                ('engine_cover_5', models.IntegerField(default=0, verbose_name='右下')),
                ('engine_cover_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lfy_1', models.IntegerField(default=0, verbose_name='前')),
                ('lfy_2', models.IntegerField(default=0, verbose_name='中')),
                ('lfy_3', models.IntegerField(default=0, verbose_name='后')),
                ('lfy_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lfd_1', models.IntegerField(default=0, verbose_name='左上')),
                ('lfd_2', models.IntegerField(default=0, verbose_name='左下')),
                ('lfd_3', models.IntegerField(default=0, verbose_name='中')),
                ('lfd_4', models.IntegerField(default=0, verbose_name='右上')),
                ('lfd_5', models.IntegerField(default=0, verbose_name='右下')),
                ('lfd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lrd_1', models.IntegerField(default=0, verbose_name='左上')),
                ('lrd_2', models.IntegerField(default=0, verbose_name='左下')),
                ('lrd_3', models.IntegerField(default=0, verbose_name='中')),
                ('lrd_4', models.IntegerField(default=0, verbose_name='右上')),
                ('lrd_5', models.IntegerField(default=0, verbose_name='右下')),
                ('lrd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lry_1', models.IntegerField(default=0, verbose_name='前')),
                ('lry_2', models.IntegerField(default=0, verbose_name='中')),
                ('lry_3', models.IntegerField(default=0, verbose_name='后')),
                ('lry_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('td_1', models.IntegerField(default=0, verbose_name='左上')),
                ('td_2', models.IntegerField(default=0, verbose_name='左下')),
                ('td_3', models.IntegerField(default=0, verbose_name='中')),
                ('td_4', models.IntegerField(default=0, verbose_name='右上')),
                ('td_5', models.IntegerField(default=0, verbose_name='右下')),
                ('td_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rry_1', models.IntegerField(default=0, verbose_name='前')),
                ('rry_2', models.IntegerField(default=0, verbose_name='中')),
                ('rry_3', models.IntegerField(default=0, verbose_name='后')),
                ('rry_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rrd_1', models.IntegerField(default=0, verbose_name='左上')),
                ('rrd_2', models.IntegerField(default=0, verbose_name='左下')),
                ('rrd_3', models.IntegerField(default=0, verbose_name='中')),
                ('rrd_4', models.IntegerField(default=0, verbose_name='右上')),
                ('rrd_5', models.IntegerField(default=0, verbose_name='右下')),
                ('rrd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rfd_1', models.IntegerField(default=0, verbose_name='左上')),
                ('rfd_2', models.IntegerField(default=0, verbose_name='左下')),
                ('rfd_3', models.IntegerField(default=0, verbose_name='中')),
                ('rfd_4', models.IntegerField(default=0, verbose_name='右上')),
                ('rfd_5', models.IntegerField(default=0, verbose_name='右下')),
                ('rfd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rfy_1', models.IntegerField(default=0, verbose_name='前')),
                ('rfy_2', models.IntegerField(default=0, verbose_name='中')),
                ('rfy_3', models.IntegerField(default=0, verbose_name='后')),
                ('rfy_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('raw_1', models.IntegerField(default=0, verbose_name='上')),
                ('raw_2', models.IntegerField(default=0, verbose_name='中')),
                ('raw_3', models.IntegerField(default=0, verbose_name='下')),
                ('raw_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rfdk_1', models.IntegerField(default=0, verbose_name='前')),
                ('rfdk_2', models.IntegerField(default=0, verbose_name='中')),
                ('rfdk_3', models.IntegerField(default=0, verbose_name='后')),
                ('rfdk_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rfdd_1', models.IntegerField(default=0, verbose_name='前')),
                ('rfdd_2', models.IntegerField(default=0, verbose_name='中')),
                ('rfdd_3', models.IntegerField(default=0, verbose_name='后')),
                ('rfdd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rb_1', models.IntegerField(default=0, verbose_name='上')),
                ('rb_2', models.IntegerField(default=0, verbose_name='中')),
                ('rb_3', models.IntegerField(default=0, verbose_name='下')),
                ('rb_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rrdk_1', models.IntegerField(default=0, verbose_name='前')),
                ('rrdk_2', models.IntegerField(default=0, verbose_name='中')),
                ('rrdk_3', models.IntegerField(default=0, verbose_name='后')),
                ('rrdk_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rrdd_1', models.IntegerField(default=0, verbose_name='前')),
                ('rrdd_2', models.IntegerField(default=0, verbose_name='中')),
                ('rrdd_3', models.IntegerField(default=0, verbose_name='后')),
                ('rrdd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('rc_1', models.IntegerField(default=0, verbose_name='上')),
                ('rc_2', models.IntegerField(default=0, verbose_name='中')),
                ('rc_3', models.IntegerField(default=0, verbose_name='下')),
                ('rc_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lc_1', models.IntegerField(default=0, verbose_name='上')),
                ('lc_2', models.IntegerField(default=0, verbose_name='中')),
                ('lc_3', models.IntegerField(default=0, verbose_name='下')),
                ('lc_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lrdk_1', models.IntegerField(default=0, verbose_name='前')),
                ('lrdk_2', models.IntegerField(default=0, verbose_name='中')),
                ('lrdk_3', models.IntegerField(default=0, verbose_name='后')),
                ('lrdk_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lrdd_1', models.IntegerField(default=0, verbose_name='前')),
                ('lrdd_2', models.IntegerField(default=0, verbose_name='中')),
                ('lrdd_3', models.IntegerField(default=0, verbose_name='后')),
                ('lrdd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lb_1', models.IntegerField(default=0, verbose_name='上')),
                ('lb_2', models.IntegerField(default=0, verbose_name='中')),
                ('lb_3', models.IntegerField(default=0, verbose_name='下')),
                ('lb_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lfdk_1', models.IntegerField(default=0, verbose_name='前')),
                ('lfdk_2', models.IntegerField(default=0, verbose_name='中')),
                ('lfdk_3', models.IntegerField(default=0, verbose_name='后')),
                ('lfdk_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('lfdd_1', models.IntegerField(default=0, verbose_name='前')),
                ('lfdd_2', models.IntegerField(default=0, verbose_name='中')),
                ('lfdd_3', models.IntegerField(default=0, verbose_name='后')),
                ('lfdd_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('law_1', models.IntegerField(default=0, verbose_name='上')),
                ('law_2', models.IntegerField(default=0, verbose_name='中')),
                ('law_3', models.IntegerField(default=0, verbose_name='下')),
                ('law_image', ajaximage.fields.AjaxImageField(blank=True, verbose_name='取所有检测点中数值大的拍照上传')),
                ('wboxk', models.CharField(choices=[('ok', '正常'), ('na', '异常')], default='ok', max_length=10, verbose_name='水箱框架')),
                ('light', models.CharField(choices=[('ok', '正常'), ('na', '异常')], default='2', max_length=10, verbose_name='前大灯总成')),
                ('engine_desc', models.TextField(blank=True, max_length=1000, verbose_name='机舱整体描述')),
                ('oil_leak_d', models.TextField(blank=True, max_length=1000, verbose_name='油液渗漏描述')),
                ('chassis_d', models.TextField(blank=True, max_length=1000, verbose_name='底盘整理描述')),
                ('first_checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_check_report', to=settings.AUTH_USER_MODEL, verbose_name='初检人')),
                ('report_m', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report1', to='report_OA.reportscontent')),
            ],
        ),
        migrations.AddField(
            model_name='carabout',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_car', to='report_OA.customer', verbose_name='用户'),
        ),
    ]
